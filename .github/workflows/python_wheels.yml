name: Python Release

on:
  push:
    tags:
      - v*-python

jobs:
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          architecture: arm64
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels - ARM64
        uses: PyO3/maturin-action@v1
        with:
          target: aarch64-apple-darwin
          args: '--release --out dist --sdist -m Cargo.toml --features "python mimalloc"'
      - name: Install built wheel - ARM64
        run: |
          pip install kbnf --find-links dist --force-reinstall
          python -c "import kbnf"
      - name: Build wheels - universal2
        uses: PyO3/maturin-action@v1
        with:
          target: universal2-apple-darwin
          args: "--release --out dist -m Cargo.toml --features ''python mimalloc''"
      - name: Install built wheel - universal2
        run: |
          pip install kbnf --find-links dist --force-reinstall
          python -c "import kbnf"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist
          
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          architecture: ${{ matrix.target }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: "--release --out dist -m Cargo.toml --features ''python mimalloc''"
      - name: Install built wheel
        run: |
          pip install kbnf --find-links dist --force-reinstall
          python -c "import kbnf"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: 3.9
        architecture: x64
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: auto
        args: "--release --out dist -m Cargo.toml --features ''python mimalloc''"
    - name: Install built wheel
      run: |
        pip install kbnf --find-links dist --force-reinstall
        python -c "import kbnf"
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  linux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [aarch64, armv7, s390x, ppc64le]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: auto
        args: "--release --out dist -m Cargo.toml --features ''python mimalloc''"
    - uses: uraimo/run-on-arch-action@v2.7.2
      name: Install built wheel
      with:
        arch: ${{ matrix.target }}
        distro: ubuntu20.04
        githubToken: ${{ github.token }}
        install: |
          apt-get update
          apt-get install -y build-essential
          apt-get install -y python3-dev
          apt-get install -y --no-install-recommends python3 python3-pip
          apt-get install -y gcc-4.9
          pip3 install -U pip
        run: |
          pip3 install kbnf --find-links dist/ --force-reinstall
          python3 -c "import kbnf"
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  musllinux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: 3.9
        architecture: x64
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: musllinux_1_2
        args: --release --out dist -m Cargo.toml
    - name: Install built wheel
      uses: addnab/docker-run-action@v3
      with:
        image: alpine:latest
        options: -v ${{ github.workspace }}:/io -w /io
        run: |
          apk add py3-pip
          pip3 install -U pip --break-system-packages
          pip3 install kbnf --find-links /io/dist/ --force-reinstall --break-system-packages
          python3 -c "import kbnf"
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  musllinux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - target: aarch64-unknown-linux-musl
            arch: aarch64
          - target: armv7-unknown-linux-musleabihf
            arch: armv7
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.platform.target }}
        manylinux: musllinux_1_2
        args: --release --out dist -m Cargo.toml
    - uses: uraimo/run-on-arch-action@v2.7.2
      name: Install built wheel
      with:
        arch: ${{ matrix.platform.arch }}
        distro: alpine_latest
        githubToken: ${{ github.token }}
        install: |
          apk update
          apk add alpine-sdk
          apk add py3-pip
          apk add cmake
          apk add python3-dev
          pip3 install -U pip --break-system-packages
        run: |
          pip3 install kbnf --find-links dist/ --force-reinstall --break-system-packages
          python3 -c "import kbnf"
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ macos, windows, linux, linux-cross, musllinux, musllinux-cross ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing *
